public class Solution {
    static Node insert(Node head, int n, int pos, int val) {
        Node currentNode = head;
        Node prevNode = null;

        // Traverse the list up to the given position
        while (pos > 0) {
            prevNode = currentNode;
            currentNode = currentNode.next;
            pos--;
        }

        /*
         * After the completion of the loop, prevNode will point to the node just before
         * the target position (pos - 1), and currentNode will point to the node at
         * the target position (pos).
         */
        Node newNode = new Node(val);
        // Handle special case when pos is 0 (insert at the beginning)
        if (prevNode == null) {
            newNode.next = head;
            head = newNode;
        } else { 
            // Insert the new node between prevNode and currentNode
            newNode.next = prevNode.next;
            prevNode.next = newNode;
        }

        return head;
    }
}
