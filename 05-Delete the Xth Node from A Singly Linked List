/* Linklist node structure
class Node
{
    int data;
    Node next;

    Node(int d){
        data = d;
        next = null;
    }
}*/

class Solution {
    Node deleteNode(Node head, int x) {
        Node currentNode = head;
        Node prevNode = null;

        // Traverse the list to reach the x-th node : Stop when x becomes 1 (we're at the node to delete)
        while (x > 1) {
            prevNode = currentNode;          
            currentNode = currentNode.next; 
            x--;
        }

        // If deleting the first node (i.e., position x = 1)
        if (prevNode == null) {
            return head.next; // Return second node as new head
        }

        // Bypass the current node to delete it from the list
        prevNode.next = currentNode.next;

        // Disconnect the deleted node (optional, helps GC in Java)
        currentNode.next = null;

        // Return the updated head
        return head;
    }
}
