class Solution {
    // Function to insert a new node with given value `num` after index `index` in the doubly linked list
    Node addNode(Node head, int index, int num) {
        Node currentNode = head;

        // Traverse to the node at the specified index
        while (index > 0 && currentNode != null) {
            currentNode = currentNode.next;
            index--;
        }

        // Create the new node to be inserted
        Node node = new Node(num);
        Node nextNode = currentNode.next;

        // Case 1: Inserting at the end of the list
        if (nextNode == null) {
            currentNode.next = node;  // Link new node after current
            node.prev = currentNode;  // Set new node's previous to current
        } else {  // Case 2: Inserting between current and next node
            currentNode.next = node;   // Link current to new node
            node.prev = currentNode;   // Set new node's previous to current

            node.next = nextNode;      // Link new node to next node
            nextNode.prev = node;      // Update next node's previous to new node
        }

        // Return the head of the list
        return head;
    }
}
